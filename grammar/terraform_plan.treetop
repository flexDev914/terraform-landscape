# Defines grammar for parsing `terraform plan` output.

grammar TerraformPlan
  rule plan
    [\s]* list:resource_list "\n"* {
      def to_ast
        list.to_ast
      end
    }
  end

  rule resource_list
    item:resource "\n\n" list:resource_list {
      def to_ast
        [item.to_ast] + list.to_ast
      end
    }
    /
    item:resource "\n" {
      def to_ast
        [item.to_ast]
      end
    }
  end

  rule resource
    header:resource_header "\n" attrs:attribute_list {
      def to_ast
        header.to_ast.merge(attributes: attrs.to_ast)
      end
    }
  end

  rule resource_header
    change:('~' / '-' / '+') _ type:[a-zA-Z0-9_-]+ '.' name:[a-zA-Z0-9_-]+ {
      def to_ast
        { change: change.text_value.to_sym, resource_type: type.text_value, resource_name: name.text_value }
      end
    }
  end

  rule attribute_list
    _ item:attribute "\n" attrs:attribute_list {
      def to_ast
        item.to_ast.merge(attrs.to_ast)
      end
    }
    /
    _ item:attribute {
      def to_ast
        item.to_ast
      end
    }
  end

  rule attribute
    attribute_name:[^\s:]* ':' _? attribute_value:[^\n]+ {
      def to_ast
        { attribute_name.text_value => attribute_value.text_value }
      end
    }
  end

  rule _
    [ ]+
  end
end
